{"name":"apelade","tagline":"deep pale apelade ape lap leaped","body":"### Looking for these?\r\n\r\n`npm install --recursive`\r\n`npm update --recursive`\r\n\r\nToday I was looking at the Holowaychuk video on vimeo about modular apps.\r\n[http://vimeo.com/56166857](http://vimeo.com/56166857)\r\nHe showed how he thought in the project main package.json that bundledDependencies should be able to have their deps recursively installed with npm install. So I did a test to see if it's still that way, which it is as of 4/16/2013. \r\n\r\nLooking at similar issues, there was the non-recursive nature of update, seems to be a popular issue in the npm tracker. [https://github.com/isaacs/npm/issues/1341](https://github.com/isaacs/npm/issues/1341)\r\nBefore getting into the npm api, if ever, I wanted to do a sanity check that recursive install would not cause a probleme extraordinaire. So I cam up with a fs.readdr script that simply called child_process.exec. Then it was begging for refactoring so badly. It went into node_modules so I added ignores[]. I broke out the parts that walk the recursion, and do the exec. Moved hardcode to params with defaults with the goal of making useful for more than npm execution.\r\n\r\nUsage:\r\n`require(\"./exec_util\").npm_install_rec(\"/dev/scratch\")`\r\n\r\nFile exec_util.coffee:\r\n```\r\n###\r\nExecute arbitrary args in a dir, singly or recursively.\r\nA list of ignore files prevents bad recursions.\r\nA list of target files triggers exec of args if found in the cwd.\r\nUsage: See npm_install_rec below.\r\nDEF_IGS works for me, but do you ever need to go to node_modules?\r\nPaul McCulloch, 16 April 2013\r\nLicense: <= MIT\r\n###\r\n\r\nfs = require \"fs\"\r\nDEF_IGS = [\"node_modules\", \".git\"]\r\n\r\nexec_args_in_dir = (args, dir) ->\r\n  console.log \"exec\", args, \"in\", dir\r\n  exec = require('child_process').exec\r\n  command = exec args, {cwd:dir, stio:\"inherit\"}, (err,stout,sterr) ->\r\n    console.log \"\\n cwd?\", dir,\r\n                \"\\n err?\", err,\r\n                \"\\n stout?\", stout,\r\n                \"\\n sterr?\", sterr\r\n\r\nfunc_walk = (args, file, parent=null, ignores=DEF_IGS, targets=[]) ->\r\n  if args? and file?\r\n    if file in targets and parent? # FUNC\r\n      exec_args_in_dir args, parent\r\n    else if file not in ignores    # WALK \r\n      if parent? # prepend full path to file for following ops\r\n        file = parent + \"/\" + file\r\n      fs.stat file, (err,stats) ->\r\n        console.log err if err?\r\n        if stats.isDirectory()\r\n          fs.readdir file, (err,files) ->\r\n            if err?\r\n              console.log err\r\n            else\r\n              for item in files\r\n                do -> func_walk(args, item, file, ignores, targets)\r\n\r\nnpm_install_rec = (start) ->\r\n  func_walk \"npm -s install\", start, null, DEF_IGS, [\"package.json\"]\r\n  \r\nnpm_update_rec = (start) ->\r\n  func_walk \"npm -s update\", start, null, DEF_IGS, [\"package.json\"]\r\n  \r\nmodule.exports = exports =\r\n  func_walk: func_walk\r\n  exec_args_dir: exec_args_in_dir\r\n  npm_install_rec: npm_install_rec\r\n  npm_update_rec: npm_update_rec\r\n```\r\n\r\n\r\n\r\nCould be useful for an installer if npm is not the way to go and shrinkwrap doesn't do it.\r\nThe problem for the Holowaychuk scenario is that it's not just npm install, it's Cakefile requires exec_util or whatever. Works on win7-64.\r\n\r\n\r\n\r\n ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}